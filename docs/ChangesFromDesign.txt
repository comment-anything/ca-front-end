

2/10/2023: Karl 

- While dealing with logout, realized that we would not be able to use simple cookies with our responses. The reason is because of CORS security policies in the browser. If we allow CORS requests from anywhere, then we can't let our fetch requests pass cookies because it would be trivial for a 3rd party app to use stored cookies to access our users accounts. From MDN:
> Note: Access-Control-Allow-Origin is prohibited from using a wildcard for requests with credentials: 'include'. In such cases, the exact origin must be provided; even if you are using a CORS unblocker extension, the requests will still fail.
[See MDN Docs](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch)



2/5/2023: Karl

- Added another parameter to Fetcher.Fetch; "method". This determines what HTTP Method Fetcher will use at that endpoint. 
- Removed cafe.clientEventReceived as it was unnecessary; using Cafe.setClientEventListeners instead. 

- cafe.userChange moved to State.loadProfile
- CafeNavBar.DisplayMessage removed, instead will be accessed via CafeNavBar.message.displayMessage
- (changed on the backend) ServerResponse.t and .d to .Name and .Data

- Candidate for Refactor: Fetcher.getAndClearResponses to Fetcher.popResponses
- Candidate for Refactor: CafeNavBar to something that encompasses the fact that it holds all the windows as well, not just the nav. Perhaps "CafeNavigator" or just "Navigator"


