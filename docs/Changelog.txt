4/15/2023: Karl 
- 'title' accessibility for navbar and a few other places
- default buttons no longer display as block 
- some new CafeDom functions for smaller form  buttons, and centered form  buttons
- own-profile section of settings made into drop-down section
- in settings and sub-sections, buttons converted to comment anywhere style 
- forgot password button moved into own-profile section
- section labels now have a lightgray border bottom
- Message area now expands when a message from the server comes in that is too big... then fades back to default. Absolute positioning prevents page resizing.
- added hover color change to buttons 

4/14/2023: Karl 
- Fixed password reset request pipeline to work with server (State transitions require passing a Partial<State> rather than just the "viewing" value desired)
- Input PW reset code now also displays the pw response message from the server more permanently, in case user forgets what the problem was 


4/9/2023: Luke
- Improved look of ui comments.
- Improved look of vote dimensions.
- Created icons for the vote dimensions.
- CafeDom function for creating "text link" elements.


4/8/2023: Karl
- Fixed nav pane not showing issue. Strangely, it had to do with setting the blur backdrop. Removing that did most of the fixing.
- Adjusted nav pane CSS so that it is all the way on the left.
- Removed top border radius from main window
- Fixed navbar not changing window on logout... for example, you would stay on the "moderator" tab even though your buttons would change. Now, if you aren't on comments or register tab, you switch to login tab at the time of logout.
- Nav pane now hides after window changes.
- Created a second .env file, `.env.production`. This file is not pushed to git but should be added.
- Now running vite with --mode production will connect to the remote Comment Anywhere server as configured in `env.production`
- Created scripts to dev in mode production and build in mode production.
    - `npm run dev-p` : runs "vite --mode production"
    - `npm run dist` and `npm run dist-w` builds the extension in production (for linux and windows respectively)


4/2/2023: Luke
- Moved CLIENT.d.ts, SERVER.d.ts, and fetcher.ts to "communication" folder
- Moved all SVG files to the "src/assets" folder.
- cafe.ts: addListenerWithFetch() abstracted function.
- navbar.ts: Organized class members.
- pseudoURL.ts: Organized class members and improved UI.
- comment.css: Removed extra "cafe-window" style.
- commentSort.ts: Organized class members and improved UI.
- message.ts: Implemented the "comment anywhere dude" and speech bubble.
- cafeDom.ts: Added genericIconButton(), genericDropdown(), and toggleButton()
- eventman.ts: Created the EventManager class
- comments.ts: Reworked layout of the CafeCommentsWindow
- login.ts: Began work improving the UI.

3/29/2023: Karl 
- "/ban" pipeline 
- improved logout, user updating. Think I fixed some of the bugs there. 
- moderation only displays for moderators now.
- ban user section 
- added domains banned from to the own profile display  

3/24/2023: Karl 
- "/viewModRecords" pipeline
- Can now succesfully request mod records. Have not made the actual view for mod records yet, however.

3/22/2023: Karl 
- "/moderate" event pipeline and fetch for moderating comments
- moderating uses UiInput.disable to disable to report after it has been sent. 
- login buttons now show when you logout, even if server isn't running or was reset 
- removed comments won't show their vote area or report button (which are rejected on the server now anyway )

3/21/2023: Karl
- viewLogs pipeline, including requesting access logs and displaying access logs
- adminLogs implemented, including ui element
- moved table css out of feedback.css and into a generic table.css within /ui folder
- added src/util/date.ts for easier generating of date strings for datetime objects. (We can abstract other useful date transformations here too)


3/19/2023: Luke
- Updated the CommentReport server response entity to include "Domain" and "ReportingUserID"
- the updateCommentReport of commentReports.ts appends the commentReport UIInputs to its container
- Designed and implemented the look of a comment report
- Added the "content", "reason", and "moderate" pages for each CafeCommentReportDisplay
- The CafeCommentReportDisplay update() function will refresh the HTML content with updated data. Will update text and moderation options.

3/18/2023: Karl
- Deleted redundant CafeComment 
- Small comment cleanups

3/17/2023: Karl 
- newReport endpoint and PostCommentReport entity
- created a cafeSection initted by CafeComments for posting reports 
- override CafeComment.destroy to remove listeners of subsections
- removed 'Feedback' from CafeCommentsWindow (not sure why this was there)
- ensured moderator panel button shows for admins and moderators

3/13/2023: Karl
- Hamburger button

3/12/2023: Karl
- assignAdmin, assignGlobalMod tweaks to work w/ back end. 

3/12/2023: Luke
- Created the CommentReport pipeline for the front end.
- Created CafeCommentReportDisplay UIInput
- Setup fetcher and dispatcher for CommentReport communications
- Created ViewCommentReports client-server communication entity
- Created CommentReport and CommentReports server responses.

3/11/2023: Luke
- Created CafeDom namespace
- Created CSS for improved generic text-input element.
- Created functions for initializing a generic text-input element. Used to create full or half width text-inputs.

3/8/2023: Frank
- created moderators.ts, banRecords.ts, modActions.ts and reports.ts (all part of moderator.ts)
- created allmost all the frameworks (implemented but non-functional) for the moderation panel. ex: buttons inputboxes dropdowns ect. ( everything except the maps)
- created sendFeedback.ts a framework for submitting user feedback to the moderation panel
- overhauled the design of the moderation panel

3/4/2023: Frank
- stylized the fonts inside of settings
- added regular times new roman to fonts folder
- created basic moderation panel (moderator.ts)
- created moderators.ts the section displayed in the panel
- created the outline for the other moderation panel features

3/1/2023: Frank
- added fonts folder for new local fonts under src -> ui -> fonts
- stylized the fonts inside of comments
- slight adjustments to the comments section
- changed the fonts inside of settings gui ( wip )

3/1/2023: Karl
- added newFeedback section
- assignAdmin, assignGlobalMod sections

2/26/2023: Group Members
- added browser types
- npm build extension command for windows
- added permissions for storage to manifest.json
- serialize and deserialize state
- state change event now passes around entire state 
- Settings in State store sort options, pseudoURL setting 
- Sorting comments 

2/26/2023: Luke
- Added setClientLocalListeners() to Cafe for comment sort setting listeners
- Added Domain and Path fields to SERVER.FullPage
- Created the PseudoURL section
- Created a multiSort function for sorting by two categories
- Implemented multiSort to sort comments

2/24/2023: Karl 
- toggleFeedback pipeline 
- moved admin stuff for only admins to see 
- feedback table header row, styling 
- toggleFeedback button to set a feedback to hidden

2/22/2023: Luke
- Updated package.json with a build-extension command. This will build the app and copy over manifest.json to the dist folder.
- Added instructions to Readme.md for testing the app as a browser extension.

2/22/2023: Karl
- Created AdminWindow. Temporarily, it is visible while logged out for UI testing.
- Created fetch pipelines for requesting admin and feedback report
- Created dispatch pipelines for receiving said reports
- some general CSS in sectionGeneralCSS that could be used by multiple classes
- created new Dom functions: tableRow, option, and select

2/19/2023: Karl
- voteComment server communication implemented

2/18/2023: Group
- Created "funny", "factual", and "agree" VoteType
- Updated the CommentReplySection. A comment's inlined reply section is shown and hidden as needed.
- Created the CommentVoteSection
- Static assets can now be properly imported in Vite
- CSS for various comment-related elements
- Created the CafeComment. Holds the newly added CommentVoteSection and CommentReplySection. Child comments may also be appended
- Created CafeCommentVote based on UIInput.
- updateComment successfully adds comments to the displayedComments member


2/18/2023: Karl
- cafe listener for "newComment" pipeline
- newComment and getComments in ClientMap
- CommentReplySection; can be used in CafeComments or in CafeCommentsWindow
- added commentReplySection to CafeCommentsWindow, so we can make top-level comment responses


2/17/2023: Karl
- Moved pseudo url feature to CafeCommentsWindow; top level button on the object that will generate the request
- Added event listeners for the getComments pipeline, as well as dispatcher for FullPage option. Also added things to ClientMap and ServerMap as necessary
- Set a type in Client for sort options: 'new', 'funny', 'agree', 'factual'
- added commentContainer
- finished populateNewComments
- started updateComment in CommentsWindow; waiting on CafeComment


2/17/2023: Luke (Front End)

- Shown the NavBar comments tab for guests.
- Created the CafeSettings type in Cafe.ts
- Created CafeCommentSortDisplay based on the design document
- Created CafeCommentsWindow based on the design document
- Added "pseudo URL" as a CafeCommentSortDisplay member. Should be discussed. This deviates from the design document.
- Prototyped and commented all newly-implemented class methods.
- Now displays CafeCommentSortDisplay on CafeCommentsWindow
- Added various TODO and NOTICE comments for later.
- Created ./windows/comments.ts
- Created ./ui/commentSort.ts
- Created ./ui/comment.ts (Nothing implemented here. Class definition required as a dependency.)

2/16/2023 : Karl
- comm ents: CommentReply, CommentVote, GetComments
- comm ents: CommentVoteDimension, Comment, FullPage
- stubbed CafeCommentsWindow and hooked into NavBar

2/12/23 : Karl and Luke
- Broke settings and own profile into sections
- Refactored windowSection to Section because it will be used by UIInputs as well
- Handling changeEmail, changeProfileBlurb, and the password reset pipeline


2/10/23 : Group members
 - started user profile display
 - started settings window
 - started password reset and profile change pipelines

2/10/2023: Karl
- Changed styling of window css and navbar css to achieve a more 'tabular' look on the buttons.
- Modified fetcher to comply with our CORS needs and store a token outside of it being a cookie.
- Fixed login to use the communication entities as specified in the design document.

2/8/2023: Frank
- Frank added the Login window and associated event handlers for the login button and forgot password button 

2/5/2023: Luke, Karl

- Register Window
- Redid Dom utility functions
- Integration test: works with back end!!!!

2/5/2023: Karl
 - Added vitest, jsdom, to package dependecies. Ensured a dom-based test would run (/src/dom.spec.ts). Added .gitignore.
 - Added additional parameter to Fetcher.fetch and types, the parameter specifies which type of HTTP Method the Fetcher should use. 
 - Added .env file and VITE_API_ADDRESS variable to point fetcher at the correct server.
 - fetcher, state, navbar, cafe, Events
