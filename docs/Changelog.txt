3/12/2023: Karl
- assignAdmin, assignGlobalMod tweaks to work w/ back end. 

3/1/2023: Karl
- added newFeedback section
- assignAdmin, assignGlobalMod sections

2/26/2023: Group Members
- added browser types
- npm build extension command for windows
- added permissions for storage to manifest.json
- serialize and deserialize state
- state change event now passes around entire state 
- Settings in State store sort options, pseudoURL setting 
- Sorting comments 

2/26/2023: Luke
- Added setClientLocalListeners() to Cafe for comment sort setting listeners
- Added Domain and Path fields to SERVER.FullPage
- Created the PseudoURL section
- Created a multiSort function for sorting by two categories
- Implemented multiSort to sort comments

2/24/2023: Karl 
- toggleFeedback pipeline 
- moved admin stuff for only admins to see 
- feedback table header row, styling 
- toggleFeedback button to set a feedback to hidden

2/22/2023: Luke
- Updated package.json with a build-extension command. This will build the app and copy over manifest.json to the dist folder.
- Added instructions to Readme.md for testing the app as a browser extension.

2/22/2023: Karl
- Created AdminWindow. Temporarily, it is visible while logged out for UI testing.
- Created fetch pipelines for requesting admin and feedback report
- Created dispatch pipelines for receiving said reports
- some general CSS in sectionGeneralCSS that could be used by multiple classes
- created new Dom functions: tableRow, option, and select

2/19/2023: Karl
- voteComment server communication implemented

2/18/2023: Group
- Created "funny", "factual", and "agree" VoteType
- Updated the CommentReplySection. A comment's inlined reply section is shown and hidden as needed.
- Created the CommentVoteSection
- Static assets can now be properly imported in Vite
- CSS for various comment-related elements
- Created the CafeComment. Holds the newly added CommentVoteSection and CommentReplySection. Child comments may also be appended
- Created CafeCommentVote based on UIInput.
- updateComment successfully adds comments to the displayedComments member


2/18/2023: Karl
- cafe listener for "newComment" pipeline
- newComment and getComments in ClientMap
- CommentReplySection; can be used in CafeComments or in CafeCommentsWindow
- added commentReplySection to CafeCommentsWindow, so we can make top-level comment responses


2/17/2023: Karl
- Moved pseudo url feature to CafeCommentsWindow; top level button on the object that will generate the request
- Added event listeners for the getComments pipeline, as well as dispatcher for FullPage option. Also added things to ClientMap and ServerMap as necessary
- Set a type in Client for sort options: 'new', 'funny', 'agree', 'factual'
- added commentContainer
- finished populateNewComments
- started updateComment in CommentsWindow; waiting on CafeComment


2/17/2023: Luke (Front End)

- Shown the NavBar comments tab for guests.
- Created the CafeSettings type in Cafe.ts
- Created CafeCommentSortDisplay based on the design document
- Created CafeCommentsWindow based on the design document
- Added "pseudo URL" as a CafeCommentSortDisplay member. Should be discussed. This deviates from the design document.
- Prototyped and commented all newly-implemented class methods.
- Now displays CafeCommentSortDisplay on CafeCommentsWindow
- Added various TODO and NOTICE comments for later.
- Created ./windows/comments.ts
- Created ./ui/commentSort.ts
- Created ./ui/comment.ts (Nothing implemented here. Class definition required as a dependency.)

2/16/2023 : Karl
- comm ents: CommentReply, CommentVote, GetComments
- comm ents: CommentVoteDimension, Comment, FullPage
- stubbed CafeCommentsWindow and hooked into NavBar

2/12/23 : Karl and Luke
- Broke settings and own profile into sections
- Refactored windowSection to Section because it will be used by UIInputs as well
- Handling changeEmail, changeProfileBlurb, and the password reset pipeline


2/10/23 : Group members
 - started user profile display
 - started settings window
 - started password reset and profile change pipelines

2/10/2023: Karl
- Changed styling of window css and navbar css to achieve a more 'tabular' look on the buttons.
- Modified fetcher to comply with our CORS needs and store a token outside of it being a cookie.
- Fixed login to use the communication entities as specified in the design document.

2/8/2023: Frank
- Frank added the Login window and associated event handlers for the login button and forgot password button 

2/5/2023: Luke, Karl

- Register Window
- Redid Dom utility functions
- Integration test: works with back end!!!!

2/5/2023: Karl
 - Added vitest, jsdom, to package dependecies. Ensured a dom-based test would run (/src/dom.spec.ts). Added .gitignore.
 - Added additional parameter to Fetcher.fetch and types, the parameter specifies which type of HTTP Method the Fetcher should use. 
 - Added .env file and VITE_API_ADDRESS variable to point fetcher at the correct server.
 - fetcher, state, navbar, cafe, Events